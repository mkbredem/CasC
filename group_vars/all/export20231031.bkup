---
export_content:
  changed: false
  assets:
    users:
    - username: admin
      first_name: ''
      last_name: ''
      email: admin@example.com
      is_superuser: true
      is_system_auditor: false
      related:
        roles:
        - name: Admin
          type: role
          content_object:
            organization:
              name: Default
              type: organization
            name: Build VPC and Controller Infra
            type: job_template
        - name: Admin
          type: role
          content_object:
            organization:
              name: Default
              type: organization
            name: Base RHEL Config
            type: job_template
        - name: Admin
          type: role
          content_object:
            organization:
              name: Default
              type: organization
            name: Build Bootstrap Definitions
            type: job_template
        - name: Admin
          type: role
          content_object:
            organization:
              name: Default
              type: organization
            name: Export Controller Resources
            type: job_template
        - name: Admin
          type: role
          content_object:
            organization:
              name: Default
              type: organization
            name: Base RHEL Config @ 03:25 PM
            type: job_template
        - name: Admin
          type: role
          content_object:
            organization:
            name: AWS Credential
            credential_type:
              name: Amazon Web Services
              kind: cloud
              type: credential_type
            type: credential
        - name: Admin
          type: role
          content_object:
            organization:
            name: Quay mbredeme
            credential_type:
              name: Container Registry
              kind: registry
              type: credential_type
            type: credential
        - name: System Administrator
          type: role
      natural_key:
        username: admin
        type: user
    - username: student1
      first_name: ''
      last_name: ''
      email: fake@fake.com
      is_superuser: true
      is_system_auditor: false
      related:
        roles:
        - name: System Administrator
          type: role
      natural_key:
        username: student1
        type: user
    organizations:
    - name: Default
      description: ''
      max_hosts: 0
      default_environment:
      related:
        execution_environments:
        - name: CasC EE
          type: execution_environment
        - name: Catch All EE
          type: execution_environment
        notification_templates: []
        notification_templates_started: []
        notification_templates_success: []
        notification_templates_error: []
        notification_templates_approvals: []
        galaxy_credentials:
        - organization:
          name: Ansible Galaxy
          credential_type:
            name: Ansible Galaxy/Automation Hub API Token
            kind: galaxy
            type: credential_type
          type: credential
      natural_key:
        name: Default
        type: organization
    teams: []
    credential_types:
    - name: AWS Key
      description: ''
      kind: cloud
      inputs:
        fields:
        - id: awsusername
          type: string
          label: Username
        - id: aws_ssh_key
          type: string
          label: SSH Private Key
          format: ssh_private_key
          secret: true
          multiline: true
        required:
        - awsusername
        - aws_ssh_key
      injectors:
        file:
          template: "{{aws_ssh_key}}"
        extra_vars:
          aws_key_file: "{{tower.filename}}"
          aws_username: "{{awsusername}}"
      natural_key:
        name: AWS Key
        kind: cloud
        type: credential_type
    credentials:
    - name: AWS Credential
      description: ''
      organization:
      inputs:
        password: ''
        username: AKIAV2DUTATUCNMZI3OE
      credential_type:
        name: Amazon Web Services
        kind: cloud
        type: credential_type
      user:
        username: admin
        type: user
      natural_key:
        organization:
        name: AWS Credential
        credential_type:
          name: Amazon Web Services
          kind: cloud
          type: credential_type
        type: credential
    - name: AWS Machine Credential
      description: ''
      inputs:
        username: ec2-user
        ssh_key_data: ''
        become_method: ''
        become_username: ''
      organization:
        name: Default
        type: organization
      credential_type:
        name: Machine
        kind: ssh
        type: credential_type
      natural_key:
        organization:
          name: Default
          type: organization
        name: AWS Machine Credential
        credential_type:
          name: Machine
          kind: ssh
          type: credential_type
        type: credential
    - name: AWS mbredemekey
      description: ''
      inputs:
        aws_ssh_key: ''
        awsusername: ec2-user
      organization:
        name: Default
        type: organization
      credential_type:
        name: AWS Key
        kind: cloud
        type: credential_type
      natural_key:
        organization:
          name: Default
          type: organization
        name: AWS mbredemekey
        credential_type:
          name: AWS Key
          kind: cloud
          type: credential_type
        type: credential
    - name: AWS Vault
      description: ''
      inputs:
        vault_id: ''
        vault_password: ''
      organization:
        name: Default
        type: organization
      credential_type:
        name: Vault
        kind: vault
        type: credential_type
      natural_key:
        organization:
          name: Default
          type: organization
        name: AWS Vault
        credential_type:
          name: Vault
          kind: vault
          type: credential_type
        type: credential
    - name: Controller Credential
      description: ''
      inputs:
        host: student1.cqd2b.example.opentlc.com
        password: ''
        username: admin
      organization:
        name: Default
        type: organization
      credential_type:
        name: Red Hat Ansible Automation Platform
        kind: cloud
        type: credential_type
      natural_key:
        organization:
          name: Default
          type: organization
        name: Controller Credential
        credential_type:
          name: Red Hat Ansible Automation Platform
          kind: cloud
          type: credential_type
        type: credential
    - name: Quay mbredeme
      description: ''
      organization:
      inputs:
        host: quay.io
        password: ''
        username: mbredeme
        verify_ssl: true
      credential_type:
        name: Container Registry
        kind: registry
        type: credential_type
      user:
        username: admin
        type: user
      natural_key:
        organization:
        name: Quay mbredeme
        credential_type:
          name: Container Registry
          kind: registry
          type: credential_type
        type: credential
    - name: registry.redhat.io credential
      description: ''
      inputs:
        host: registry.redhat.io
        password: ''
        username: seanc@redhat.com
      organization:
        name: Default
        type: organization
      credential_type:
        name: Container Registry
        kind: registry
        type: credential_type
      natural_key:
        organization:
          name: Default
          type: organization
        name: registry.redhat.io credential
        credential_type:
          name: Container Registry
          kind: registry
          type: credential_type
        type: credential
    - name: test_cred
      description: ''
      inputs:
        aws_ssh_key: ''
        awsusername: ec2-user
      organization:
        name: Default
        type: organization
      credential_type:
        name: AWS Key
        kind: cloud
        type: credential_type
      natural_key:
        organization:
          name: Default
          type: organization
        name: test_cred
        credential_type:
          name: AWS Key
          kind: cloud
          type: credential_type
        type: credential
    - name: Workshop Credential
      description: ''
      inputs:
        username: ec2-user
        ssh_key_data: ''
      organization:
        name: Default
        type: organization
      credential_type:
        name: Machine
        kind: ssh
        type: credential_type
      natural_key:
        organization:
          name: Default
          type: organization
        name: Workshop Credential
        credential_type:
          name: Machine
          kind: ssh
          type: credential_type
        type: credential
    notification_templates: []
    projects:
    - name: AWS Platform
      description: ''
      local_path: _9__aws_platform
      scm_type: git
      scm_url: https://github.com/mkbredem/aws-platform.git
      scm_branch: ''
      scm_refspec: ''
      scm_clean: false
      scm_track_submodules: false
      scm_delete_on_update: false
      credential:
      timeout: 0
      scm_update_on_launch: true
      scm_update_cache_timeout: 0
      allow_override: false
      default_environment:
      organization:
        name: Default
        type: organization
      related:
        notification_templates_started: []
        notification_templates_success: []
        notification_templates_error: []
      natural_key:
        organization:
          name: Default
          type: organization
        name: AWS Platform
        type: project
    - name: CasC Project
      description: ''
      local_path: _13__casc_project
      scm_type: git
      scm_url: https://github.com/mkbredem/CasC.git
      scm_branch: ''
      scm_refspec: ''
      scm_clean: false
      scm_track_submodules: false
      scm_delete_on_update: false
      credential:
      timeout: 0
      scm_update_on_launch: true
      scm_update_cache_timeout: 0
      allow_override: false
      organization:
        name: Default
        type: organization
      default_environment:
        name: configascode workshop execution environment
        type: execution_environment
      related:
        notification_templates_started: []
        notification_templates_success: []
        notification_templates_error: []
      natural_key:
        organization:
          name: Default
          type: organization
        name: CasC Project
        type: project
    inventory:
    - name: AWS Running Inventory
      description: ''
      kind: ''
      host_filter:
      variables: "---"
      organization:
        name: Default
        type: organization
      related:
        hosts:
        - name: ec2-44-192-122-103.compute-1.amazonaws.com
          description: imported
          enabled: true
          instance_id: i-049fa44a72b6015bf
          variables: '{"ami_launch_index": 0, "architecture": "x86_64", "block_device_mappings":
            [{"device_name": "/dev/sda1", "ebs": {"attach_time": "2023-10-31T17:04:32+00:00",
            "delete_on_termination": true, "status": "attached", "volume_id": "vol-037dd7b89a77b39d1"}}],
            "capacity_reservation_specification": {"capacity_reservation_preference":
            "open"}, "client_token": "55ff24154cbf4664b27eb7abd9da4949", "cpu_options":
            {"core_count": 2, "threads_per_core": 2}, "current_instance_boot_mode":
            "legacy-bios", "ebs_optimized": false, "ena_support": true, "enclave_options":
            {"enabled": false}, "hibernation_options": {"configured": false}, "hypervisor":
            "xen", "image_id": "ami-046981daef262e1d8", "instance_id": "i-049fa44a72b6015bf",
            "instance_type": "m5.xlarge", "key_name": "mbredemekey", "launch_time":
            "2023-10-31T17:04:31+00:00", "maintenance_options": {"auto_recovery":
            "default"}, "metadata_options": {"http_endpoint": "enabled", "http_protocol_ipv6":
            "disabled", "http_put_response_hop_limit": 1, "http_tokens": "optional",
            "instance_metadata_tags": "disabled", "state": "applied"}, "monitoring":
            {"state": "disabled"}, "network_interfaces": [{"association": {"ip_owner_id":
            "amazon", "public_dns_name": "ec2-44-192-122-103.compute-1.amazonaws.com",
            "public_ip": "44.192.122.103"}, "attachment": {"attach_time": "2023-10-31T17:04:31+00:00",
            "attachment_id": "eni-attach-04f90e50914e3053f", "delete_on_termination":
            true, "device_index": 0, "network_card_index": 0, "status": "attached"},
            "description": "", "groups": [{"group_id": "sg-08582304bb057ef26", "group_name":
            "mbredemeSG_RHEL"}], "interface_type": "interface", "ipv6_addresses":
            [], "mac_address": "02:c7:d7:2a:2b:9f", "network_interface_id": "eni-05ac6bd7d879d9078",
            "owner_id": "399676474600", "private_dns_name": "ip-12-0-1-62.ec2.internal",
            "private_ip_address": "12.0.1.62", "private_ip_addresses": [{"association":
            {"ip_owner_id": "amazon", "public_dns_name": "ec2-44-192-122-103.compute-1.amazonaws.com",
            "public_ip": "44.192.122.103"}, "primary": true, "private_dns_name": "ip-12-0-1-62.ec2.internal",
            "private_ip_address": "12.0.1.62"}], "source_dest_check": true, "status":
            "in-use", "subnet_id": "subnet-08b641931e3cf427f", "vpc_id": "vpc-0e75651dee3db7ec7"}],
            "owner_id": "399676474600", "placement": {"availability_zone": "us-east-1c",
            "group_name": "", "region": "us-east-1", "tenancy": "default"}, "platform_details":
            "Red Hat BYOL Linux", "private_dns_name": "ip-12-0-1-62.ec2.internal",
            "private_dns_name_options": {"enable_resource_name_dns_a_record": false,
            "enable_resource_name_dns_aaaa_record": false, "hostname_type": "ip-name"},
            "private_ip_address": "12.0.1.62", "product_codes": [], "public_dns_name":
            "ec2-44-192-122-103.compute-1.amazonaws.com", "public_ip_address": "44.192.122.103",
            "requester_id": "", "reservation_id": "r-068a23de5635e330c", "root_device_name":
            "/dev/sda1", "root_device_type": "ebs", "security_groups": [{"group_id":
            "sg-08582304bb057ef26", "group_name": "mbredemeSG_RHEL"}], "source_dest_check":
            true, "state": {"code": 16, "name": "running"}, "state_transition_reason":
            "", "subnet_id": "subnet-08b641931e3cf427f", "tags": {"Name": "aap_demo_controller",
            "env": "prod", "operating_system": "RHEL", "owner": "mbredeme", "usage":
            "mbredemedemos"}, "usage_operation": "RunInstances:00g0", "usage_operation_update_time":
            "2023-10-31T17:04:31+00:00", "virtualization_type": "hvm", "vpc_id": "vpc-0e75651dee3db7ec7"}'
          inventory:
            organization:
              name: Default
              type: organization
            name: AWS Running Inventory
            type: inventory
          related:
            groups:
            - name: aws_ec2
              inventory:
                organization:
                  name: Default
                  type: organization
                name: AWS Running Inventory
                type: inventory
              type: group
          natural_key:
            name: ec2-44-192-122-103.compute-1.amazonaws.com
            inventory:
              organization:
                name: Default
                type: organization
              name: AWS Running Inventory
              type: inventory
            type: host
        groups:
        - name: aws_ec2
          description: imported
          variables: "{}"
          inventory:
            organization:
              name: Default
              type: organization
            name: AWS Running Inventory
            type: inventory
          related:
            hosts:
            - name: ec2-44-192-122-103.compute-1.amazonaws.com
              inventory:
                organization:
                  name: Default
                  type: organization
                name: AWS Running Inventory
                type: inventory
              type: host
            children: []
          natural_key:
            name: aws_ec2
            inventory:
              organization:
                name: Default
                type: organization
              name: AWS Running Inventory
              type: inventory
            type: group
        labels: []
      natural_key:
        organization:
          name: Default
          type: organization
        name: AWS Running Inventory
        type: inventory
    - name: Workshop Inventory
      description: ''
      kind: ''
      host_filter:
      variables: ''
      organization:
        name: Default
        type: organization
      related:
        hosts:
        - name: student1-ansible-1
          description: imported
          enabled: true
          instance_id: ''
          variables: "{}"
          inventory:
            organization:
              name: Default
              type: organization
            name: Workshop Inventory
            type: inventory
          related:
            groups:
            - name: control_nodes
              inventory:
                organization:
                  name: Default
                  type: organization
                name: Workshop Inventory
                type: inventory
              type: group
          natural_key:
            name: student1-ansible-1
            inventory:
              organization:
                name: Default
                type: organization
              name: Workshop Inventory
              type: inventory
            type: host
        - name: student1-automationhub
          description: imported
          enabled: true
          instance_id: ''
          variables: '{"ansible_host": "3.141.47.172"}'
          inventory:
            organization:
              name: Default
              type: organization
            name: Workshop Inventory
            type: inventory
          related:
            groups:
            - name: control_nodes
              inventory:
                organization:
                  name: Default
                  type: organization
                name: Workshop Inventory
                type: inventory
              type: group
            - name: student1
              inventory:
                organization:
                  name: Default
                  type: organization
                name: Workshop Inventory
                type: inventory
              type: group
          natural_key:
            name: student1-automationhub
            inventory:
              organization:
                name: Default
                type: organization
              name: Workshop Inventory
              type: inventory
            type: host
        groups:
        - name: attendance
          description: imported
          variables: "{}"
          inventory:
            organization:
              name: Default
              type: organization
            name: Workshop Inventory
            type: inventory
          related:
            hosts: []
            children: []
          natural_key:
            name: attendance
            inventory:
              organization:
                name: Default
                type: organization
              name: Workshop Inventory
              type: inventory
            type: group
        - name: control_nodes
          description: imported
          variables: '{"ansible_port": 22, "ansible_ssh_private_key_file": "/runner/project/provisioner/cqd2b/cqd2b-private.pem",
            "ansible_ssh_user": "ec2-user"}'
          inventory:
            organization:
              name: Default
              type: organization
            name: Workshop Inventory
            type: inventory
          related:
            hosts:
            - name: student1-ansible-1
              inventory:
                organization:
                  name: Default
                  type: organization
                name: Workshop Inventory
                type: inventory
              type: host
            - name: student1-automationhub
              inventory:
                organization:
                  name: Default
                  type: organization
                name: Workshop Inventory
                type: inventory
              type: host
            children: []
          natural_key:
            name: control_nodes
            inventory:
              organization:
                name: Default
                type: organization
              name: Workshop Inventory
              type: inventory
            type: group
        - name: student1
          description: imported
          variables: "{}"
          inventory:
            organization:
              name: Default
              type: organization
            name: Workshop Inventory
            type: inventory
          related:
            hosts:
            - name: student1-automationhub
              inventory:
                organization:
                  name: Default
                  type: organization
                name: Workshop Inventory
                type: inventory
              type: host
            children: []
          natural_key:
            name: student1
            inventory:
              organization:
                name: Default
                type: organization
              name: Workshop Inventory
              type: inventory
            type: group
        labels: []
      natural_key:
        organization:
          name: Default
          type: organization
        name: Workshop Inventory
        type: inventory
    inventory_sources:
    - name: AWS Running Inventory Source
      description: ''
      source: ec2
      source_path: ''
      source_vars: |-
        ---
        plugin: amazon.aws.aws_ec2
        regions:
          - us-east-1
        filters:
          # All instances with their state as `running`
          instance-state-name: running
      enabled_var: ''
      enabled_value: ''
      host_filter: ''
      overwrite: true
      overwrite_vars: false
      timeout: 0
      verbosity: 1
      update_on_launch: true
      update_cache_timeout: 0
      source_project:
      update_on_project_update: false
      credential:
        organization:
        name: AWS Credential
        credential_type:
          name: Amazon Web Services
          kind: cloud
          type: credential_type
        type: credential
      execution_environment:
        name: AWS Platform EE
        type: execution_environment
      inventory:
        organization:
          name: Default
          type: organization
        name: AWS Running Inventory
        type: inventory
      related:
        schedules: []
        notification_templates_started: []
        notification_templates_success: []
        notification_templates_error: []
      natural_key:
        name: AWS Running Inventory Source
        inventory:
          organization:
            name: Default
            type: organization
          name: AWS Running Inventory
          type: inventory
        type: inventory_source
    - name: " (Workshop Inventory - 8)"
      description: ''
      source: file
      source_path: "/var/lib/awx/hosts"
      source_vars: ''
      credential:
      enabled_var: ''
      enabled_value: ''
      host_filter: ''
      overwrite: false
      overwrite_vars: false
      timeout: 0
      verbosity: 1
      execution_environment:
      update_on_launch: false
      update_cache_timeout: 0
      source_project:
      update_on_project_update: false
      inventory:
        organization:
          name: Default
          type: organization
        name: Workshop Inventory
        type: inventory
      related:
        schedules: []
        notification_templates_started: []
        notification_templates_success: []
        notification_templates_error: []
      natural_key:
        name: " (Workshop Inventory - 8)"
        inventory:
          organization:
            name: Default
            type: organization
          name: Workshop Inventory
          type: inventory
        type: inventory_source
    job_templates:
    - name: Base RHEL Config
      description: ''
      job_type: run
      playbook: configure-base-instance.yml
      scm_branch: ''
      forks: 0
      limit: ''
      verbosity: 1
      extra_vars: |-
        ---
        target_hosts: ec2-44-192-122-103.compute-1.amazonaws.com
      job_tags: ''
      force_handlers: false
      skip_tags: ''
      start_at_task: ''
      timeout: 0
      use_fact_cache: false
      host_config_key: ''
      ask_scm_branch_on_launch: false
      ask_diff_mode_on_launch: false
      ask_variables_on_launch: true
      ask_limit_on_launch: false
      ask_tags_on_launch: false
      ask_skip_tags_on_launch: false
      ask_job_type_on_launch: false
      ask_verbosity_on_launch: false
      ask_inventory_on_launch: false
      ask_credential_on_launch: false
      survey_enabled: false
      become_enabled: true
      diff_mode: false
      allow_simultaneous: false
      job_slice_count: 1
      webhook_service: ''
      webhook_credential:
      inventory:
        organization:
          name: Default
          type: organization
        name: AWS Running Inventory
        type: inventory
      project:
        organization:
          name: Default
          type: organization
        name: AWS Platform
        type: project
      execution_environment:
        name: AWS Platform EE
        type: execution_environment
      related:
        labels: []
        credentials:
        - organization:
            name: Default
            type: organization
          name: AWS mbredemekey
          credential_type:
            name: AWS Key
            kind: cloud
            type: credential_type
          type: credential
        - organization:
            name: Default
            type: organization
          name: AWS Vault
          credential_type:
            name: Vault
            kind: vault
            type: credential_type
          type: credential
        schedules: []
        notification_templates_started: []
        notification_templates_success: []
        notification_templates_error: []
        survey_spec: {}
      natural_key:
        organization:
          name: Default
          type: organization
        name: Base RHEL Config
        type: job_template
    - name: Base RHEL Config @ 03:25 PM
      description: ''
      job_type: run
      playbook: configure-base-instance.yml
      scm_branch: ''
      forks: 0
      limit: ''
      verbosity: 2
      extra_vars: |-
        ---
        target_hosts: ec2-44-192-122-103.compute-1.amazonaws.com
      job_tags: ''
      force_handlers: false
      skip_tags: ''
      start_at_task: ''
      timeout: 0
      use_fact_cache: false
      host_config_key: ''
      ask_scm_branch_on_launch: false
      ask_diff_mode_on_launch: false
      ask_variables_on_launch: true
      ask_limit_on_launch: false
      ask_tags_on_launch: false
      ask_skip_tags_on_launch: false
      ask_job_type_on_launch: false
      ask_verbosity_on_launch: false
      ask_inventory_on_launch: false
      ask_credential_on_launch: false
      survey_enabled: false
      become_enabled: false
      diff_mode: false
      allow_simultaneous: false
      job_slice_count: 1
      webhook_service: ''
      webhook_credential:
      inventory:
        organization:
          name: Default
          type: organization
        name: AWS Running Inventory
        type: inventory
      project:
        organization:
          name: Default
          type: organization
        name: AWS Platform
        type: project
      execution_environment:
        name: AWS Platform EE
        type: execution_environment
      related:
        labels: []
        credentials:
        - organization:
            name: Default
            type: organization
          name: AWS Machine Credential
          credential_type:
            name: Machine
            kind: ssh
            type: credential_type
          type: credential
        - organization:
            name: Default
            type: organization
          name: AWS Vault
          credential_type:
            name: Vault
            kind: vault
            type: credential_type
          type: credential
        schedules: []
        notification_templates_started: []
        notification_templates_success: []
        notification_templates_error: []
        survey_spec: {}
      natural_key:
        organization:
          name: Default
          type: organization
        name: Base RHEL Config @ 03:25 PM
        type: job_template
    - name: Build Bootstrap Definitions
      description: ''
      job_type: run
      playbook: copy_existing_controller_config.yaml
      scm_branch: ''
      forks: 0
      limit: ''
      verbosity: 0
      extra_vars: |-
        ---
        web_server: ec2-3-93-187-216.compute-1.amazonaws.com
        web_server_user: ec2_user
        vault_controller_username: admin
        vault_controller_password: ********
        vault_controller_hostname: student1.cqd2b.example.opentlc.com
        vault_controller_validate_certs: false
      job_tags: ''
      force_handlers: false
      skip_tags: ''
      start_at_task: ''
      timeout: 0
      use_fact_cache: false
      host_config_key: ''
      ask_scm_branch_on_launch: false
      ask_diff_mode_on_launch: false
      ask_variables_on_launch: false
      ask_limit_on_launch: false
      ask_tags_on_launch: false
      ask_skip_tags_on_launch: false
      ask_job_type_on_launch: false
      ask_verbosity_on_launch: false
      ask_inventory_on_launch: false
      ask_credential_on_launch: false
      survey_enabled: false
      become_enabled: false
      diff_mode: false
      allow_simultaneous: false
      job_slice_count: 1
      webhook_service: ''
      webhook_credential:
      inventory:
        organization:
          name: Default
          type: organization
        name: AWS Running Inventory
        type: inventory
      project:
        organization:
          name: Default
          type: organization
        name: CasC Project
        type: project
      execution_environment:
        name: CasC EE
        type: execution_environment
      related:
        labels: []
        credentials:
        - organization:
            name: Default
            type: organization
          name: AWS mbredemekey
          credential_type:
            name: AWS Key
            kind: cloud
            type: credential_type
          type: credential
        - organization:
            name: Default
            type: organization
          name: AWS Vault
          credential_type:
            name: Vault
            kind: vault
            type: credential_type
          type: credential
        - organization:
            name: Default
            type: organization
          name: Controller Credential
          credential_type:
            name: Red Hat Ansible Automation Platform
            kind: cloud
            type: credential_type
          type: credential
        schedules: []
        notification_templates_started: []
        notification_templates_success: []
        notification_templates_error: []
        survey_spec: {}
      natural_key:
        organization:
          name: Default
          type: organization
        name: Build Bootstrap Definitions
        type: job_template
    - name: Build VPC and Controller Infra
      description: ''
      job_type: run
      playbook: aws_create_instance.yml
      scm_branch: ''
      forks: 0
      limit: ''
      verbosity: 0
      extra_vars: "---\nvm_names: \n  - \"aap_demo_controller\"\nimage_name: \"rhel88\"\nvpc_prefix:
        \"mbredeme\"\n_instance_type_: \"m5.xlarge\"\nenv: prod"
      job_tags: ''
      force_handlers: false
      skip_tags: ''
      start_at_task: ''
      timeout: 0
      use_fact_cache: false
      host_config_key: ''
      ask_scm_branch_on_launch: false
      ask_diff_mode_on_launch: false
      ask_variables_on_launch: false
      ask_limit_on_launch: false
      ask_tags_on_launch: false
      ask_skip_tags_on_launch: false
      ask_job_type_on_launch: false
      ask_verbosity_on_launch: false
      ask_inventory_on_launch: false
      ask_credential_on_launch: false
      survey_enabled: false
      become_enabled: false
      diff_mode: false
      allow_simultaneous: false
      job_slice_count: 1
      webhook_service: ''
      webhook_credential:
      inventory:
        organization:
          name: Default
          type: organization
        name: Workshop Inventory
        type: inventory
      project:
        organization:
          name: Default
          type: organization
        name: AWS Platform
        type: project
      execution_environment:
        name: AWS Platform EE
        type: execution_environment
      related:
        labels: []
        credentials:
        - organization:
          name: AWS Credential
          credential_type:
            name: Amazon Web Services
            kind: cloud
            type: credential_type
          type: credential
        - organization:
            name: Default
            type: organization
          name: AWS Vault
          credential_type:
            name: Vault
            kind: vault
            type: credential_type
          type: credential
        - organization:
            name: Default
            type: organization
          name: Controller Credential
          credential_type:
            name: Red Hat Ansible Automation Platform
            kind: cloud
            type: credential_type
          type: credential
        - organization:
            name: Default
            type: organization
          name: Workshop Credential
          credential_type:
            name: Machine
            kind: ssh
            type: credential_type
          type: credential
        schedules: []
        notification_templates_started: []
        notification_templates_success: []
        notification_templates_error: []
        survey_spec: {}
      natural_key:
        organization:
          name: Default
          type: organization
        name: Build VPC and Controller Infra
        type: job_template
    - name: Export Controller Resources
      description: ''
      job_type: run
      playbook: test_export.yml
      scm_branch: ''
      forks: 0
      limit: ''
      verbosity: 0
      extra_vars: |-
        ---
        web_server: ec2-3-93-187-216.compute-1.amazonaws.com
        web_server_user: ec2_user
        vault_controller_username: admin
        vault_controller_password: ********
        vault_controller_hostname: student1.cqd2b.example.opentlc.com
        vault_controller_validate_certs: false
      job_tags: ''
      force_handlers: false
      skip_tags: ''
      start_at_task: ''
      timeout: 0
      use_fact_cache: false
      host_config_key: ''
      ask_scm_branch_on_launch: false
      ask_diff_mode_on_launch: false
      ask_variables_on_launch: false
      ask_limit_on_launch: false
      ask_tags_on_launch: false
      ask_skip_tags_on_launch: false
      ask_job_type_on_launch: false
      ask_verbosity_on_launch: false
      ask_inventory_on_launch: false
      ask_credential_on_launch: false
      survey_enabled: false
      become_enabled: false
      diff_mode: false
      allow_simultaneous: false
      job_slice_count: 1
      webhook_service: ''
      webhook_credential:
      inventory:
        organization:
          name: Default
          type: organization
        name: AWS Running Inventory
        type: inventory
      project:
        organization:
          name: Default
          type: organization
        name: CasC Project
        type: project
      execution_environment:
        name: AWS Platform EE
        type: execution_environment
      related:
        labels: []
        credentials:
        - organization:
            name: Default
            type: organization
          name: AWS mbredemekey
          credential_type:
            name: AWS Key
            kind: cloud
            type: credential_type
          type: credential
        - organization:
            name: Default
            type: organization
          name: AWS Vault
          credential_type:
            name: Vault
            kind: vault
            type: credential_type
          type: credential
        - organization:
            name: Default
            type: organization
          name: Controller Credential
          credential_type:
            name: Red Hat Ansible Automation Platform
            kind: cloud
            type: credential_type
          type: credential
        schedules: []
        notification_templates_started: []
        notification_templates_success: []
        notification_templates_error: []
        survey_spec: {}
      natural_key:
        organization:
          name: Default
          type: organization
        name: Export Controller Resources
        type: job_template
    workflow_job_templates:
    - name: Provision and Config AAP Controller
      description: ''
      extra_vars: "---"
      survey_enabled: false
      allow_simultaneous: false
      ask_variables_on_launch: false
      inventory:
      limit:
      scm_branch: ''
      ask_inventory_on_launch: false
      ask_scm_branch_on_launch: false
      ask_limit_on_launch: false
      webhook_service: ''
      webhook_credential:
      organization:
        name: Default
        type: organization
      related:
        schedules: []
        workflow_nodes:
        - extra_data: {}
          inventory:
          scm_branch:
          job_type:
          job_tags:
          skip_tags:
          limit:
          diff_mode:
          verbosity:
          all_parents_must_converge: false
          identifier: a61341b6-a513-431e-adb9-8cce684de5e6
          workflow_job_template:
            organization:
              name: Default
              type: organization
            name: Provision and Config AAP Controller
            type: workflow_job_template
          unified_job_template:
            name: AWS Running Inventory Source
            inventory:
              organization:
                name: Default
                type: organization
              name: AWS Running Inventory
              type: inventory
            type: inventory_source
          related:
            credentials: []
            success_nodes:
            - workflow_job_template:
                organization:
                  name: Default
                  type: organization
                name: Provision and Config AAP Controller
                type: workflow_job_template
              identifier: a85b7626-65fe-4f11-83e8-5ecc58d8547e
              type: workflow_job_template_node
            failure_nodes: []
            always_nodes: []
          natural_key:
            workflow_job_template:
              organization:
                name: Default
                type: organization
              name: Provision and Config AAP Controller
              type: workflow_job_template
            identifier: a61341b6-a513-431e-adb9-8cce684de5e6
            type: workflow_job_template_node
        - extra_data: {}
          inventory:
          scm_branch:
          job_type:
          job_tags:
          skip_tags:
          limit:
          diff_mode:
          verbosity:
          all_parents_must_converge: false
          identifier: '09f5a7d4-6c30-47f1-85a9-132d9baccc1b'
          workflow_job_template:
            organization:
              name: Default
              type: organization
            name: Provision and Config AAP Controller
            type: workflow_job_template
          unified_job_template:
            organization:
              name: Default
              type: organization
            name: Build VPC and Controller Infra
            type: job_template
          related:
            credentials: []
            success_nodes:
            - workflow_job_template:
                organization:
                  name: Default
                  type: organization
                name: Provision and Config AAP Controller
                type: workflow_job_template
              identifier: a61341b6-a513-431e-adb9-8cce684de5e6
              type: workflow_job_template_node
            failure_nodes: []
            always_nodes: []
          natural_key:
            workflow_job_template:
              organization:
                name: Default
                type: organization
              name: Provision and Config AAP Controller
              type: workflow_job_template
            identifier: '09f5a7d4-6c30-47f1-85a9-132d9baccc1b'
            type: workflow_job_template_node
        - extra_data: {}
          inventory:
          scm_branch:
          job_type:
          job_tags:
          skip_tags:
          limit:
          diff_mode:
          verbosity:
          all_parents_must_converge: false
          identifier: a85b7626-65fe-4f11-83e8-5ecc58d8547e
          workflow_job_template:
            organization:
              name: Default
              type: organization
            name: Provision and Config AAP Controller
            type: workflow_job_template
          unified_job_template:
            organization:
              name: Default
              type: organization
            name: Base RHEL Config
            type: job_template
          related:
            credentials: []
            success_nodes: []
            failure_nodes: []
            always_nodes: []
          natural_key:
            workflow_job_template:
              organization:
                name: Default
                type: organization
              name: Provision and Config AAP Controller
              type: workflow_job_template
            identifier: a85b7626-65fe-4f11-83e8-5ecc58d8547e
            type: workflow_job_template_node
        labels: []
        notification_templates_started: []
        notification_templates_success: []
        notification_templates_error: []
        notification_templates_approvals: []
        survey_spec: {}
      natural_key:
        organization:
          name: Default
          type: organization
        name: Provision and Config AAP Controller
        type: workflow_job_template
    execution_environments:
    - name: CasC EE
      description: ''
      image: quay.io/mbredeme/casc_ee
      pull: always
      organization:
        name: Default
        type: organization
      credential:
        organization:
        name: Quay mbredeme
        credential_type:
          name: Container Registry
          kind: registry
          type: credential_type
        type: credential
      natural_key:
        name: CasC EE
        type: execution_environment
    - name: Catch All EE
      description: ''
      image: quay.io/mbredeme/custom_catchall_ee
      pull: always
      organization:
        name: Default
        type: organization
      credential:
        organization:
        name: Quay mbredeme
        credential_type:
          name: Container Registry
          kind: registry
          type: credential_type
        type: credential
      natural_key:
        name: Catch All EE
        type: execution_environment
    - name: AWS Platform EE
      description: ''
      organization:
      image: quay.io/mbredeme/aws_platform_ee_dr
      pull: missing
      credential:
        organization:
        name: Quay mbredeme
        credential_type:
          name: Container Registry
          kind: registry
          type: credential_type
        type: credential
      natural_key:
        name: AWS Platform EE
        type: execution_environment
    - name: configascode workshop execution environment
      description: ''
      organization:
      image: registry.redhat.io/ansible-automation-platform-23/ee-minimal-rhel8:latest
      credential:
      pull: missing
      natural_key:
        name: configascode workshop execution environment
        type: execution_environment
    - name: Default execution environment
      description: ''
      organization:
      image: registry.redhat.io/ansible-automation-platform-21/ee-supported-rhel8:latest
      pull: missing
      credential:
        organization:
          name: Default
          type: organization
        name: registry.redhat.io credential
        credential_type:
          name: Container Registry
          kind: registry
          type: credential_type
        type: credential
      natural_key:
        name: Default execution environment
        type: execution_environment
    - name: Ansible Engine 2.9 execution environment
      description: ''
      organization:
      image: registry.redhat.io/ansible-automation-platform-22/ee-29-rhel8:latest
      pull: ''
      credential:
        organization:
        name: Default Execution Environment Registry Credential
        credential_type:
          name: Container Registry
          kind: registry
          type: credential_type
        type: credential
      natural_key:
        name: Ansible Engine 2.9 execution environment
        type: execution_environment
    - name: Minimal execution environment
      description: ''
      organization:
      image: registry.redhat.io/ansible-automation-platform-22/ee-minimal-rhel8:latest
      pull: ''
      credential:
        organization:
        name: Default Execution Environment Registry Credential
        credential_type:
          name: Container Registry
          kind: registry
          type: credential_type
        type: credential
      natural_key:
        name: Minimal execution environment
        type: execution_environment
    applications: []
    schedules:
    - rrule: DTSTART:20220811T203756Z RRULE:FREQ=WEEKLY;INTERVAL=1;BYDAY=SU
      name: Cleanup Job Schedule
      description: Automatically Generated Schedule
      extra_data:
        days: '120'
      inventory:
      scm_branch:
      job_type:
      job_tags:
      skip_tags:
      limit:
      diff_mode:
      verbosity:
      enabled: true
      unified_job_template:
        name: Cleanup Job Details
        type: system_job_template
      related:
        credentials: []
      natural_key:
        unified_job_template:
          name: Cleanup Job Details
          type: system_job_template
        name: Cleanup Job Schedule
        type: schedule
    - rrule: DTSTART:20220811T203756Z RRULE:FREQ=WEEKLY;INTERVAL=1;BYDAY=TU
      name: Cleanup Activity Schedule
      description: Automatically Generated Schedule
      extra_data:
        days: '355'
      inventory:
      scm_branch:
      job_type:
      job_tags:
      skip_tags:
      limit:
      diff_mode:
      verbosity:
      enabled: true
      unified_job_template:
        name: Cleanup Activity Stream
        type: system_job_template
      related:
        credentials: []
      natural_key:
        unified_job_template:
          name: Cleanup Activity Stream
          type: system_job_template
        name: Cleanup Activity Schedule
        type: schedule
    - rrule: DTSTART:20220811T203910Z RRULE:FREQ=WEEKLY;INTERVAL=1;COUNT=1
      name: Cleanup Expired Sessions
      description: Cleans out expired browser sessions
      extra_data: {}
      inventory:
      scm_branch:
      job_type:
      job_tags:
      skip_tags:
      limit:
      diff_mode:
      verbosity:
      enabled: true
      unified_job_template:
        name: Cleanup Expired Sessions
        type: system_job_template
      related:
        credentials: []
      natural_key:
        unified_job_template:
          name: Cleanup Expired Sessions
          type: system_job_template
        name: Cleanup Expired Sessions
        type: schedule
    - rrule: DTSTART:20220811T203910Z RRULE:FREQ=WEEKLY;INTERVAL=1;COUNT=1
      name: Cleanup Expired OAuth 2 Tokens
      description: Removes expired OAuth 2 access and refresh tokens
      extra_data: {}
      inventory:
      scm_branch:
      job_type:
      job_tags:
      skip_tags:
      limit:
      diff_mode:
      verbosity:
      enabled: true
      unified_job_template:
        name: Cleanup Expired OAuth 2 Tokens
        type: system_job_template
      related:
        credentials: []
      natural_key:
        unified_job_template:
          name: Cleanup Expired OAuth 2 Tokens
          type: system_job_template
        name: Cleanup Expired OAuth 2 Tokens
        type: schedule
  failed: false
_ansible_verbose_always: true
_ansible_no_log:
changed: false
